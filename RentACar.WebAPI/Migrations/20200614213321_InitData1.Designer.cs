// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentACar.WebAPI.Database;

namespace RentACar.WebAPI.Migrations
{
    [DbContext(typeof(RentACarContext))]
    [Migration("20200614213321_InitData1")]
    partial class InitData1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RentACar.WebAPI.Database.DodatnaOprema", b =>
                {
                    b.Property<int>("DodatnaOpremaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DodatnaOpremaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("OpremaId")
                        .HasColumnName("OpremaID")
                        .HasColumnType("int");

                    b.Property<int>("RezervacijaId")
                        .HasColumnName("RezervacijaID")
                        .HasColumnType("int");

                    b.HasKey("DodatnaOpremaId");

                    b.HasIndex("OpremaId");

                    b.HasIndex("RezervacijaId");

                    b.ToTable("DodatnaOprema");
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Drzave", b =>
                {
                    b.Property<int>("DrzavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DrzavaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("DrzavaId");

                    b.ToTable("Drzave");

                    b.HasData(
                        new
                        {
                            DrzavaId = 1,
                            Naziv = "Bosna i Hercegovina"
                        },
                        new
                        {
                            DrzavaId = 2,
                            Naziv = "Srbija"
                        },
                        new
                        {
                            DrzavaId = 3,
                            Naziv = "Hrvatska"
                        },
                        new
                        {
                            DrzavaId = 4,
                            Naziv = "Slovenija"
                        });
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Gradovi", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GradID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DrzavaId")
                        .HasColumnName("DrzavaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("GradId");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Gradovi");

                    b.HasData(
                        new
                        {
                            GradId = 1,
                            DrzavaId = 1,
                            Naziv = "Mostar"
                        },
                        new
                        {
                            GradId = 2,
                            DrzavaId = 1,
                            Naziv = "Sarajevo"
                        },
                        new
                        {
                            GradId = 3,
                            DrzavaId = 2,
                            Naziv = "Beograd"
                        },
                        new
                        {
                            GradId = 4,
                            DrzavaId = 3,
                            Naziv = "Zagreb"
                        },
                        new
                        {
                            GradId = 5,
                            DrzavaId = 4,
                            Naziv = "Ljubljana"
                        });
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.KategorijeVozila", b =>
                {
                    b.Property<int>("KategorijaVozilaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KategorijaVozilaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("KategorijaVozilaId");

                    b.ToTable("KategorijeVozila");

                    b.HasData(
                        new
                        {
                            KategorijaVozilaId = 1,
                            Naziv = "A",
                            Opis = "Motocikl sa ili bez bočne prikolice čija zapremina prelazi 125 cm3, a snaga 11 kw"
                        },
                        new
                        {
                            KategorijaVozilaId = 2,
                            Naziv = "B",
                            Opis = "Motorna vozila, osim vozila kategorije A, čija najveća dozvoljena masa nije veća od 3,5 t i koji nemaju više od 8 sjedišta ne računajući sjedište vozača."
                        },
                        new
                        {
                            KategorijaVozilaId = 3,
                            Naziv = "C",
                            Opis = "Motorna vozila čija je najveća dozvoljena masa veća od 7,5 t."
                        },
                        new
                        {
                            KategorijaVozilaId = 4,
                            Naziv = "D",
                            Opis = "Motorna vozila za prijevoz osoba, koja, osim sjedišta za vozača, imaju više od 8 sjedišta. (Uslov 2 godine posjedovanje vozačke dozvole)"
                        });
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Korisnici", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("LozinkaSalt")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("KorisnikId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("Korisnici_Email")
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("KorisnickoIme")
                        .IsUnique()
                        .HasName("Korisnici_KorisnickoIme");

                    b.ToTable("Korisnici");

                    b.HasData(
                        new
                        {
                            KorisnikId = 1,
                            Email = "admin@edu.fit.ba",
                            Ime = "Admin",
                            KorisnickoIme = "desktop",
                            LozinkaHash = "HzoOkNHGE27Bfhd/8f1uxeQRCOM=",
                            LozinkaSalt = "rHh+zm55r5AYhYbSovWIwA==",
                            Prezime = "Admin",
                            Status = true,
                            Telefon = "+387 61 000 000"
                        },
                        new
                        {
                            KorisnikId = 2,
                            Email = "radnik@edu.fit.ba",
                            Ime = "Radnik",
                            KorisnickoIme = "radnik",
                            LozinkaHash = "HzoOkNHGE27Bfhd/8f1uxeQRCOM=",
                            LozinkaSalt = "rHh+zm55r5AYhYbSovWIwA==",
                            Prezime = "Radnik",
                            Status = true,
                            Telefon = "+387 61 111 1111"
                        });
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnikUlogaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzmjene")
                        .HasColumnType("datetime");

                    b.Property<int>("KorisnikId")
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int");

                    b.Property<int>("UlogaId")
                        .HasColumnName("UlogaID")
                        .HasColumnType("int");

                    b.HasKey("KorisnikUlogaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisniciUloge");
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Kupci", b =>
                {
                    b.Property<int>("KupacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KupacID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("KupacId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("Kupci_Email");

                    b.HasIndex("KorisnickoIme")
                        .IsUnique()
                        .HasName("Kupci_KorisnickoIme");

                    b.ToTable("Kupci");

                    b.HasData(
                        new
                        {
                            KupacId = 1,
                            DatumRegistracije = new DateTime(2020, 6, 13, 20, 10, 26, 966, DateTimeKind.Local),
                            Email = "kupac@edu.fit.ba",
                            Ime = "Kupac",
                            KorisnickoIme = "mobile",
                            LozinkaHash = "HzoOkNHGE27Bfhd/8f1uxeQRCOM=",
                            LozinkaSalt = "rHh+zm55r5AYhYbSovWIwA==",
                            Prezime = "Kupac",
                            Status = true,
                            Telefon = "+387 61 222 222"
                        });
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Lokacije", b =>
                {
                    b.Property<int>("LokacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LokacijaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("GradId")
                        .HasColumnName("GradID")
                        .HasColumnType("int");

                    b.HasKey("LokacijaId");

                    b.HasIndex("GradId");

                    b.ToTable("Lokacije");

                    b.HasData(
                        new
                        {
                            LokacijaId = 1,
                            Adresa = "Maršala Tita 169",
                            GradId = 1
                        },
                        new
                        {
                            LokacijaId = 2,
                            Adresa = "Bulevar Meše Selimovića bb",
                            GradId = 2
                        },
                        new
                        {
                            LokacijaId = 3,
                            Adresa = "Milentija Popovića 9",
                            GradId = 3
                        },
                        new
                        {
                            LokacijaId = 4,
                            Adresa = "Ul.Radoslava Cimermana 64A",
                            GradId = 4
                        },
                        new
                        {
                            LokacijaId = 5,
                            Adresa = "Trg Osvobodilne fronte 6",
                            GradId = 5
                        });
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Modeli", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ModelID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ProizvodjacId")
                        .HasColumnName("ProizvodjacID")
                        .HasColumnType("int");

                    b.HasKey("ModelId");

                    b.HasIndex("ProizvodjacId");

                    b.ToTable("Modeli");
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Notifikacije", b =>
                {
                    b.Property<int>("NotifikacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NotifikacijaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumSlanja")
                        .HasColumnType("datetime");

                    b.Property<int>("KupacId")
                        .HasColumnName("KupacID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("NovostId")
                        .HasColumnName("NovostID")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("NotifikacijaId");

                    b.HasIndex("KupacId");

                    b.HasIndex("NovostId");

                    b.ToTable("Notifikacije");
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Novosti", b =>
                {
                    b.Property<int>("NovostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NovostID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("KorisnikId")
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("NovostId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Novosti");
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Ocjene", b =>
                {
                    b.Property<int>("OcjenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OcjenaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("KupacId")
                        .HasColumnName("KupacID")
                        .HasColumnType("int");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.Property<int>("VoziloId")
                        .HasColumnName("VoziloID")
                        .HasColumnType("int");

                    b.HasKey("OcjenaId");

                    b.HasIndex("KupacId");

                    b.HasIndex("VoziloId");

                    b.ToTable("Ocjene");
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Oprema", b =>
                {
                    b.Property<int>("OpremaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OpremaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("OpremaId");

                    b.ToTable("Oprema");

                    b.HasData(
                        new
                        {
                            OpremaId = 1,
                            Cijena = 10m,
                            Naziv = "Dječija sjedalica",
                            Opis = "Za djecu od 0 - 3 god."
                        },
                        new
                        {
                            OpremaId = 2,
                            Cijena = 10m,
                            Naziv = "GPS-navigacija"
                        },
                        new
                        {
                            OpremaId = 3,
                            Cijena = 50m,
                            Naziv = "Dodatni vozač"
                        });
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Osiguranja", b =>
                {
                    b.Property<int>("OsiguranjeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OsiguranjeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("OsiguranjeId");

                    b.ToTable("Osiguranja");

                    b.HasData(
                        new
                        {
                            OsiguranjeId = 1,
                            Cijena = 0m,
                            Naziv = "Basic",
                            Opis = "Zaštita od krađe i osnovna zaštita od oštećenja od sudara."
                        },
                        new
                        {
                            OsiguranjeId = 2,
                            Cijena = 11m,
                            Naziv = "Medium",
                            Opis = "Srednja vrsta osiguranja."
                        },
                        new
                        {
                            OsiguranjeId = 3,
                            Cijena = 19m,
                            Naziv = "Premium",
                            Opis = "Puni kasko paket u potpunosti vas oslobađa financijske odgovornosti u slučaju financijske odgovornosti."
                        });
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Pretplate", b =>
                {
                    b.Property<int>("PretplataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PretplataID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("KategorijaVozilaId")
                        .HasColumnName("KategorijaVozilaID")
                        .HasColumnType("int");

                    b.Property<int>("KupacId")
                        .HasColumnName("KupacID")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PretplataId");

                    b.HasIndex("KategorijaVozilaId");

                    b.HasIndex("KupacId");

                    b.ToTable("Pretplate");
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Proizvodjaci", b =>
                {
                    b.Property<int>("ProizvodjacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProizvodjacID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ProizvodjacId");

                    b.ToTable("Proizvodjaci");

                    b.HasData(
                        new
                        {
                            ProizvodjacId = 1,
                            Naziv = "Volkswagen"
                        },
                        new
                        {
                            ProizvodjacId = 2,
                            Naziv = "Audi"
                        },
                        new
                        {
                            ProizvodjacId = 3,
                            Naziv = "Mercedes-Benz"
                        },
                        new
                        {
                            ProizvodjacId = 4,
                            Naziv = "BMW"
                        },
                        new
                        {
                            ProizvodjacId = 5,
                            Naziv = "Opel"
                        });
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Racuni", b =>
                {
                    b.Property<int>("RacunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RacunID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojDana")
                        .HasColumnType("int");

                    b.Property<string>("BrojRacuna")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<decimal>("IznajmljivanjeVozila")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IznosBezPdv")
                        .HasColumnName("IznosBezPDV")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IznosSaPdv")
                        .HasColumnName("IznosSaPDV")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("OpremaUkupno")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("OsiguranjeUkupno")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Pdv")
                        .HasColumnName("PDV")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Popust")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<byte[]>("QRCode")
                        .IsRequired()
                        .HasColumnName("QRCode")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RezervacijaId")
                        .HasColumnName("RezervacijaID")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("RacunId");

                    b.HasIndex("BrojRacuna")
                        .IsUnique()
                        .HasName("Racuni_BrojRacuna");

                    b.HasIndex("RezervacijaId");

                    b.ToTable("Racuni");
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.RegistracijeVozila", b =>
                {
                    b.Property<int>("RegistracijaVozilaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RegistracijaVozilaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("KrajRegistracije")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("PocetakRegistracije")
                        .HasColumnType("datetime");

                    b.Property<string>("RegistarskeOznake")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UposlenikId")
                        .HasColumnName("UposlenikID")
                        .HasColumnType("int");

                    b.Property<int>("VoziloId")
                        .HasColumnName("VoziloID")
                        .HasColumnType("int");

                    b.HasKey("RegistracijaVozilaId");

                    b.HasIndex("UposlenikId");

                    b.HasIndex("VoziloId");

                    b.ToTable("RegistracijeVozila");
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Rezervacije", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RezervacijaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranjaRezervacij")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DatumPovrata")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DatumPreuzimanja")
                        .HasColumnType("datetime");

                    b.Property<int>("KupacId")
                        .HasColumnName("KupacID")
                        .HasColumnType("int");

                    b.Property<int>("LokacijaPovrataId")
                        .HasColumnName("LokacijaPovrataID")
                        .HasColumnType("int");

                    b.Property<int>("LokacijaPreuzimanjaId")
                        .HasColumnName("LokacijaPreuzimanjaID")
                        .HasColumnType("int");

                    b.Property<string>("Napomena")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("OsiguranjeId")
                        .HasColumnName("OsiguranjeID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Popust")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("VoziloId")
                        .HasColumnName("VoziloID")
                        .HasColumnType("int");

                    b.HasKey("RezervacijaId");

                    b.HasIndex("KupacId");

                    b.HasIndex("LokacijaPovrataId");

                    b.HasIndex("LokacijaPreuzimanjaId");

                    b.HasIndex("OsiguranjeId");

                    b.HasIndex("VoziloId");

                    b.ToTable("Rezervacije");
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UlogaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("UlogaId");

                    b.ToTable("Uloge");

                    b.HasData(
                        new
                        {
                            UlogaId = 1,
                            Naziv = "Administrator"
                        },
                        new
                        {
                            UlogaId = 2,
                            Naziv = "Radnik"
                        });
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Vozila", b =>
                {
                    b.Property<int>("VoziloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VoziloID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojSasije")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("BrojSjedista")
                        .HasColumnType("int");

                    b.Property<int>("BrojVrata")
                        .HasColumnType("int");

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("GodinaProizvodnje")
                        .HasColumnType("int");

                    b.Property<string>("Gorivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("KategorijaVozilaId")
                        .HasColumnName("KategorijaVozilaID")
                        .HasColumnType("int");

                    b.Property<int>("LokacijaId")
                        .HasColumnName("LokacijaID")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnName("ModelID")
                        .HasColumnType("int");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("SlikaThumb")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Snaga")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Transmisija")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("VoziloId");

                    b.HasIndex("KategorijaVozilaId");

                    b.HasIndex("LokacijaId");

                    b.HasIndex("ModelId");

                    b.ToTable("Vozila");
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.DodatnaOprema", b =>
                {
                    b.HasOne("RentACar.WebAPI.Database.Oprema", "Oprema")
                        .WithMany("DodatnaOprema")
                        .HasForeignKey("OpremaId")
                        .HasConstraintName("FK_DodatnaOprema_Oprema")
                        .IsRequired();

                    b.HasOne("RentACar.WebAPI.Database.Rezervacije", "Rezervacija")
                        .WithMany("DodatnaOprema")
                        .HasForeignKey("RezervacijaId")
                        .HasConstraintName("FK_DodatnaOprema_Rezervacije")
                        .IsRequired();
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Gradovi", b =>
                {
                    b.HasOne("RentACar.WebAPI.Database.Drzave", "Drzava")
                        .WithMany("Gradovi")
                        .HasForeignKey("DrzavaId")
                        .HasConstraintName("FK_Gradovi_Drzave")
                        .IsRequired();
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.HasOne("RentACar.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_KorisniciUloge_Korisnici")
                        .IsRequired();

                    b.HasOne("RentACar.WebAPI.Database.Uloge", "Uloga")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK_KorisniciUloge_Uloge")
                        .IsRequired();
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Lokacije", b =>
                {
                    b.HasOne("RentACar.WebAPI.Database.Gradovi", "Grad")
                        .WithMany("Lokacije")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK_Lokacije_Gradovi")
                        .IsRequired();
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Modeli", b =>
                {
                    b.HasOne("RentACar.WebAPI.Database.Proizvodjaci", "Proizvodjac")
                        .WithMany("Modeli")
                        .HasForeignKey("ProizvodjacId")
                        .HasConstraintName("FK_Modeli_Proizvodjaci")
                        .IsRequired();
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Notifikacije", b =>
                {
                    b.HasOne("RentACar.WebAPI.Database.Kupci", "Kupac")
                        .WithMany("Notifikacije")
                        .HasForeignKey("KupacId")
                        .HasConstraintName("FK_Notifikacije_Kupci")
                        .IsRequired();

                    b.HasOne("RentACar.WebAPI.Database.Novosti", "Novost")
                        .WithMany("Notifikacije")
                        .HasForeignKey("NovostId")
                        .HasConstraintName("FK_Notifikacije_Novosti");
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Novosti", b =>
                {
                    b.HasOne("RentACar.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("Novosti")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_Novosti_Korisnici")
                        .IsRequired();
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Ocjene", b =>
                {
                    b.HasOne("RentACar.WebAPI.Database.Kupci", "Kupac")
                        .WithMany("Ocjene")
                        .HasForeignKey("KupacId")
                        .HasConstraintName("FK_Ocjene_Kupci")
                        .IsRequired();

                    b.HasOne("RentACar.WebAPI.Database.Vozila", "Vozilo")
                        .WithMany("Ocjene")
                        .HasForeignKey("VoziloId")
                        .HasConstraintName("FK_Ocjene_Vozila")
                        .IsRequired();
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Pretplate", b =>
                {
                    b.HasOne("RentACar.WebAPI.Database.KategorijeVozila", "KategorijaVozila")
                        .WithMany("Pretplate")
                        .HasForeignKey("KategorijaVozilaId")
                        .HasConstraintName("FK_Preplate_KategorijeVozila")
                        .IsRequired();

                    b.HasOne("RentACar.WebAPI.Database.Kupci", "Kupac")
                        .WithMany("Pretplate")
                        .HasForeignKey("KupacId")
                        .HasConstraintName("FK_Preplate_Kupci")
                        .IsRequired();
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Racuni", b =>
                {
                    b.HasOne("RentACar.WebAPI.Database.Rezervacije", "Rezervacija")
                        .WithMany("Racuni")
                        .HasForeignKey("RezervacijaId")
                        .HasConstraintName("FK_Racuni_Rezervacije")
                        .IsRequired();
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.RegistracijeVozila", b =>
                {
                    b.HasOne("RentACar.WebAPI.Database.Korisnici", "Uposlenik")
                        .WithMany("RegistracijeVozila")
                        .HasForeignKey("UposlenikId")
                        .HasConstraintName("FK_RegistracijeVozila_Korisnici")
                        .IsRequired();

                    b.HasOne("RentACar.WebAPI.Database.Vozila", "Vozilo")
                        .WithMany("RegistracijeVozila")
                        .HasForeignKey("VoziloId")
                        .HasConstraintName("FK_RegistracijeVozila_Vozila")
                        .IsRequired();
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Rezervacije", b =>
                {
                    b.HasOne("RentACar.WebAPI.Database.Kupci", "Kupac")
                        .WithMany("Rezervacije")
                        .HasForeignKey("KupacId")
                        .HasConstraintName("FK_Rezervacije_Kupci")
                        .IsRequired();

                    b.HasOne("RentACar.WebAPI.Database.Lokacije", "LokacijaPovrata")
                        .WithMany("RezervacijeLokacijaPovrata")
                        .HasForeignKey("LokacijaPovrataId")
                        .HasConstraintName("FK_Rezervacije_LokacijePovrata")
                        .IsRequired();

                    b.HasOne("RentACar.WebAPI.Database.Lokacije", "LokacijaPreuzimanja")
                        .WithMany("RezervacijeLokacijaPreuzimanja")
                        .HasForeignKey("LokacijaPreuzimanjaId")
                        .HasConstraintName("FK_Rezervacije_LokacijePreuzimanja")
                        .IsRequired();

                    b.HasOne("RentACar.WebAPI.Database.Osiguranja", "Osiguranje")
                        .WithMany("Rezervacije")
                        .HasForeignKey("OsiguranjeId")
                        .HasConstraintName("FK_Rezervacije_Osiguranja")
                        .IsRequired();

                    b.HasOne("RentACar.WebAPI.Database.Vozila", "Vozilo")
                        .WithMany("Rezervacije")
                        .HasForeignKey("VoziloId")
                        .HasConstraintName("FK_Rezervacije_Vozila")
                        .IsRequired();
                });

            modelBuilder.Entity("RentACar.WebAPI.Database.Vozila", b =>
                {
                    b.HasOne("RentACar.WebAPI.Database.KategorijeVozila", "KategorijaVozila")
                        .WithMany("Vozila")
                        .HasForeignKey("KategorijaVozilaId")
                        .HasConstraintName("FK_Vozila_KategorijeVozila")
                        .IsRequired();

                    b.HasOne("RentACar.WebAPI.Database.Lokacije", "Lokacija")
                        .WithMany("Vozila")
                        .HasForeignKey("LokacijaId")
                        .HasConstraintName("FK_Vozila_Lokacije")
                        .IsRequired();

                    b.HasOne("RentACar.WebAPI.Database.Modeli", "Model")
                        .WithMany("Vozila")
                        .HasForeignKey("ModelId")
                        .HasConstraintName("FK_Vozila_Modeli")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
